import pdfplumber
import openai
from PyPDF2 import PdfReader, PdfWriter

# Step 1: Extract Text from PDFs
def extract_pdf_text(pdf_path):
    """
    Extracts the text from a PDF file.
    
    :param pdf_path: Path to the PDF file
    :return: Extracted text as a string
    """
    with pdfplumber.open(pdf_path) as pdf:
        full_text = ''
        for page in pdf.pages:
            full_text += page.extract_text()
    return full_text

# Step 2: Set up Azure OpenAI API
openai.api_type = "azure"
openai.api_base = "https://<your-resource-name>.openai.azure.com/"  # Replace with your Azure resource URL
openai.api_version = "2023-03-15-preview"
openai.api_key = "<your-azure-openai-api-key>"  # Replace with your Azure API key

def adjust_modifications_with_documentation(target_text, documentation_text):
    """
    Uses GPT-4 to suggest modifications to a target PDF based on a documentation PDF.

    :param target_text: Text from the target PDF
    :param documentation_text: Text from the documentation PDF
    :return: Suggested modifications from GPT-4
    """
    prompt = (
        f"Based on the following documentation, suggest modifications for the target contract "
        f"to ensure compliance and alignment with best practices:\n\n"
        f"Documentation:\n{documentation_text}\n\n"
        f"Target Contract:\n{target_text}\n\n"
        f"Please suggest the necessary changes."
    )
    
    response = openai.Completion.create(
        engine="gpt-4",  # You can also use gpt-35-turbo if you prefer
        prompt=prompt,
        temperature=0.5,
        max_tokens=1500
    )
    return response.choices[0].text.strip()

# Step 3: Modify PDF Based on GPT-4 Suggestions
def apply_modifications_to_pdf(pdf_path, output_path, suggestions):
    """
    Adds the GPT-4 suggestions to the PDF as metadata or applies modifications.
    
    :param pdf_path: Path to the target PDF
    :param output_path: Path to save the modified PDF
    :param suggestions: Text containing modification suggestions
    """
    reader = PdfReader(pdf_path)
    writer = PdfWriter()

    # Add the suggestions as metadata (you can modify this to add annotations or comments)
    writer.add_metadata({
        '/Modifications_Suggestions': suggestions
    })

    for page in reader.pages:
        writer.add_page(page)

    with open(output_path, 'wb') as f:
        writer.write(f)

    print(f"Modified PDF saved at: {output_path}")

# Step 4: Main Workflow
def main(target_pdf_path, documentation_pdf_path, output_pdf_path):
    """
    Orchestrates the process of extracting text, sending to GPT-4, and applying the modifications.

    :param target_pdf_path: Path to the target PDF to be modified
    :param documentation_pdf_path: Path to the reference documentation PDF
    :param output_pdf_path: Path to save the modified PDF
    """
    # Extract text from the target PDF and the documentation PDF
    target_text = extract_pdf_text(target_pdf_path)
    documentation_text = extract_pdf_text(documentation_pdf_path)

    # Get modification suggestions from GPT-4
    suggestions = adjust_modifications_with_documentation(target_text, documentation_text)
    print("GPT-4 Suggestions:", suggestions)

    # Apply modifications or add comments to the PDF
    apply_modifications_to_pdf(target_pdf_path, output_pdf_path, suggestions)

# Example usage
if __name__ == "__main__":
    # Replace these with the actual paths to your files
    target_pdf_path = "target_contract.pdf"  # Target PDF file
    documentation_pdf_path = "documentation.pdf"  # Documentation PDF file
    output_pdf_path = "modified_contract_with_suggestions.pdf"  # Output file

    main(target_pdf_path, documentation_pdf_path, output_pdf_path)



Inaccurate Identification: AI may incorrectly match names


This use case involves implementing an AI-based system using NLP to compare the similarity between names and surnames from Atlas' customer database and the BA cheque defaulters blacklist. We will verify if it is the same individual by checking the date of birth (or date of creation for companies) and the place of birth. The results will be compiled into an Excel file, with one sheet for matches with a similarity score ≥ 95% and another for scores < 95%. This ensures a thorough verification process, reducing false matches and accurately identifying defaulters.




This use case involves implementing an AI-based system using NLP to compare the similarity between names and surnames from Atlas' customer database and the BA cheque defaulters blacklist. When a potential match is identified, the system will confirm if it is the same individual by verifying the date of birth (or date of creation for companies) and the place of birth. This approach ensures a thorough verification process, reducing false positives and accurately identifying defaulters.




https://forms.office.com/Pages/ResponsePage.aspx?id=JZxPYfq_x0KG2JZBAfVfom6FMzcQ6YZGjty1QNO8NZtUQzJUWjdWUVZHNE42M00yR0FKUlVBMkJXOC4u&origin=QRCode&qrcodeorigin=presentation



Objet : Version finale du quiz

Bonjour [Nom du Manager],

Voici la version finale du quiz. Vous pouvez également consulter la vidéo "DECAD AI" en suivant ce lien : [chemin/URL].

Cordialement,
Nihad




Avez-vous une idée du nombre de lignes traitées mensuellement pour le flux domestique, provenant du fichier DECAD envoyé par la BA ?


DECAD traite les interdits de chéquier par la vérification manuelle des clients signalés comme interdits de chéquier

"Savez-vous combien de fois la Banque d'Algérie envoie les fichiers des interdits de chéquiers ?"



"Savez-vous combien de temps il faut pour traiter les fichiers des interdits de chéquiers par le flux Domestique ?"

"Savez-vous combien de temps la Banque d'Algérie met pour envoyer les fichiers des interdits de chéquiers ?"



[Scène 1 : Ouverture - Écran titre]
Texte à l'écran : "Révolutionner les processus manuels avec l'IA chez BNP Paribas El Djazair"

[Scène 2 : Présentation du problème - Visuel du traitement manuel des données]
Narrateur : "Chaque mois, nous traitons plus de 2 200 enregistrements, en vérifiant manuellement les clients interdits de chéquiers. Ce processus est long et comporte un risque élevé d'erreurs à cause des variations de noms et des homonymes."

[Scène 3 : Présentation de la solution IA - Visuel du traitement des données par l'IA]
Narrateur : "Avec notre solution d'IA, DECAD, alimentée par le traitement avancé du langage naturel, nous avons automatisé ce processus complexe. L'IA identifie les similarités phonétiques, même avec des variations de noms."

[Scène 4 : Les avantages - Visuel d'un tableau de bord montrant les gains d'efficacité]
Narrateur : "Cette solution réduit le travail manuel de 93%, augmente la précision, et garantit la conformité avec les réglementations bancaires—le tout en seulement 42 jours/homme."

[Scène 5 : Conclusion - Logo de la banque et slogan]
Narrateur : "L'IA chez BNP Paribas El Djazair : transformer les tâches manuelles pour un avenir plus 
